#!/usr/bin/env bash

fail() { echo $* ; exit 1 ; }

dev_release() {
  go get -u github.com/laher/goxc
  go get -u github.com/aktau/github-release
  $GOPATH/bin/goxc -pv ${version}
  echo "Release Archive Generated: .releases/${version}/rdpgd_${version}_linux_amd64.tar.gz"
}

final_release() {
  set -v
  set -x 
  if [[ -z ${GITHUB_TOKEN} ]]
  then fail "GITHUB_TOKEN is not set in the environment: https://help.github.com/articles/creating-an-access-token-for-command-line-use/"
  fi

  go get -u github.com/laher/goxc
  go get -u github.com/aktau/github-release

  $GOPATH/bin/goxc -pv ${version}
  releaseMsg="RDPG Daemon (rdpgd) Release ${version}"
  git tag -a ${version} -m "${releaseMsg}"
  for remote in $(git remote)
  do git push ${remote} --tags || true
  done

  $GOPATH/bin/github-release release \
    --user wayneeseguin \
    --repo rdpgd \
    --tag ${version} \
    --name "RDPG Daemon (rdpgd) Release ${version}" \
    --description "RDPG Agent to run with the RDPG BOSH Release: https://github.com/wayneeseguin/rdpg-boshrelease"

  $GOPATH/bin/github-release upload \
    --user wayneeseguin \
    --repo rdpgd \
    --tag ${version} \
    --name "rdpgd_${version}_linux_amd64.tar.gz" \
    --file "./.releases/${version}/rdpgd_${version}_linux_amd64.tar.gz"
}

get_catalog() {
  curl ${1:-} -s -X GET -H "X-Broker-API-Version: 2.4" -H "Content-Type: application/json" \
    http://cfadmin:cfadmin@127.0.0.1:8888/v2/catalog
  echo
}

export \
  RDPG_AGENT_LOG_LEVEL=trace \
  RDPG_SB_PORT=8888 \
  RDPG_SB_USER=cf \
  RDPG_SB_PASS=cf \
  RDPG_ADMIN_PORT=58888 \
  RDPG_ADMIN_PG_URI="postgresql://postgres:admin@127.0.0.1:55432/rdpg?sslmode=disable&connect_timeout=5&fallback_application_name=rdpgd" \
  RDPG_SERVICE_DNS="10.244.2.2:8888"

action=$1
shift || echo "No action given!!"

instanceId="$(uuidgen)"
serviceId="$(uuidgen)"
planId="$(uuidgen)"
organizationId="$(uuidgen)"
spaceId="$(uuidgen)"
bindingId="$(uuidgen)"
appId="$(uuidgen)"

case ${action} in
  (run)
    exec go run rdpgd.go
    ;;
  (tunnel)
    echo "Password when prompted: c1oudc0w"
    exec ssh  -L 55432:127.0.0.1:7432 vcap@10.244.2.2
    ;;
  (test)
    exec go test
    ;;
  (convey)
    go get -u github.com/smartystreets/goconvey
    exec $GOPATH/bin/goconvey
    ;;
  (catalog)
    get_catalog -v
    echo
  ;;
  (provision)
    cl=($(get_catalog | tr -d '"' | tr ',' ' '))
    planId=$(for r in ${cl[@]} ; do echo $r | awk -F: '/plan_id/{print $2}' ; done)
    serviceId=$(for r in ${cl[@]} ; do echo $r | awk -F: '/service_id/{print $2}' ; done)
    echo instanceId=${instanceId}
    set -v -x
    curl -v -s -X PUT -H "X-Broker-API-Version: 2.4" -H "Content-Type: application/json" \
      http://cfadmin:cfadmin@127.0.0.1:8888/v2/service_instances/${instanceId} \
      -d "{ \"service_id\": \"${serviceId}\", \"plan_id\": \"${planId}\", \"organization_guid\": \"${organizationId}\", \"space_guid\": \"${spaceId}\" }"
    echo
    ;;
  (bind)
    instanceId=$1
    set -x -v
    curl -v -X PUT -H "X-Broker-API-Version: 2.4" -H "Content-Type: application/json" \
      http://cfadmin:cfadmin@127.0.0.1:8888/v2/service_instances/$instanceId/service_bindings/${bindingId} \
      -d "{ \"service_id\": \"${serviceId}\", \"plan_id\": \"${planId}\", \"app_guid\": \"${appId}\"}"
    echo
    ;;
  (unbind)
    instanceId=$1
    curl -v -X DELETE -H "X-Broker-API-Version: 2.4" -H "Content-Type: application/json" \
      http://cfadmin:cfadmin@127.0.0.1:8888/v2/service_instances/$instanceId/service_bindings/${bindingId}
    echo
    ;;
  (deprovision)
    id=$1
    curl -X DELETE -H "X-Broker-API-Version: 2.4" -v \
      http://cfadmin:cfadmin@127.0.0.1:8888/v2/service_instances/${id}
    echo
    ;;
  (dev_release)
    version="$1"
    if [[ -z ${version} ]]
    then fail "A version must be given for the release."
    fi
    dev_release
    ;;
  (final_release)
    version="$1"
    if [[ -z ${version} ]]
    then fail "A version must be given for the release."
    fi
    final_release
    ;;
  (cf_integration_test)
    set -v
    cf create-service-broker rdpg cfadmin cfadmin http://${RDPG_SERVICE_DNS}
    cf enable-service-access rdpg -o $USER
    cf marketplace
    cf create-service rdpg shared rdpg-service-1
    cf services
    cf bind-service rdpg-cf-service-checks rdpg-service-1
    cf restage rdpg-cf-service-checks
    cf unbind-service rdpg-cf-service-checks rdpg-service-1
    cf delete-service rdpg-service-1
    set +v
    ;;
esac
